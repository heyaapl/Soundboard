name: Package and Release

on:
  push:
    branches:
      - main
      - master
      - '*'
    tags:
      - '*'
  release:
    types:
      - published

jobs:
  package:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'heyaapl'

    env:
      CF_API_KEY: ${{ secrets.CURSE_API_KEY }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout addon
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from TOC
        id: version
        run: |
          VERSION=$(grep "^## Version:" Soundboard.toc | sed 's/^## Version: *//')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Determine release type
        id: release_type
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            # Tagged release
            TAG_NAME="${{ github.ref_name }}"
            if [[ "$TAG_NAME" == *"alpha"* ]]; then
              echo "RELEASE_TYPE=alpha" >> $GITHUB_OUTPUT
              echo "Release type: alpha (tagged with alpha)"
            elif [[ "$TAG_NAME" == *"beta"* ]]; then
              echo "RELEASE_TYPE=beta" >> $GITHUB_OUTPUT
              echo "Release type: beta (tagged with beta)"  
            else
              echo "RELEASE_TYPE=release" >> $GITHUB_OUTPUT
              echo "Release type: release (tagged without alpha/beta)"
            fi
          elif [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.ref }}" == "refs/heads/master" ]]; then
            # Main/master branch push
            echo "RELEASE_TYPE=release" >> $GITHUB_OUTPUT
            echo "Release type: release (main/master branch)"
          else
            # Non-main branch push -> Beta
            BRANCH_NAME="${{ github.ref_name }}"
            echo "RELEASE_TYPE=beta" >> $GITHUB_OUTPUT
            echo "Release type: beta (branch: $BRANCH_NAME)"
          fi

      - name: Package addon
        uses: BigWigsMods/packager@v2
        env:
          CF_API_KEY: ${{ env.CF_API_KEY }}
          GITHUB_OAUTH: ${{ env.GITHUB_OAUTH }}
        with:
          args: -g ${{ env.GITHUB_OAUTH }} -u ${{ env.CF_API_KEY }} -r ${{ steps.release_type.outputs.RELEASE_TYPE }}

      - name: Package summary
        run: |
          echo "âœ… Successfully packaged Soundboard v${{ steps.version.outputs.VERSION }}"
          echo "ðŸ“¦ Release type: ${{ steps.release_type.outputs.RELEASE_TYPE }}"
          echo "ðŸŒ¿ Branch/Tag: ${{ github.ref_name }}"
          echo "ðŸŽ¯ Game version: 5.5.0 (Interface: 55000)"
